version: '3'
services:
  
  mongo:
    image: mongo
    container_name: mongo
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: super-root
      MONGO_INITDB_ROOT_PASSWORD: D7kJe7gr
    volumes:
      - sonar-data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - net

  sonarqube:
    container_name: sonarqube
    image: sonarqube
    restart: always
    depends_on:
      - db
    ports:
      - "9000:9000"
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - sonar-data:/opt/sonarqube/data
      - sonar-extensions:/opt/sonarqube/extensions
      - sonar-logs:/opt/sonarqube/logs
      - sonar-temp:/opt/sonarqube/temp
    networks:
      - net
  db:
    container_name: postgres_sonarqube
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
    volumes:
      - sonar-postgresql:/var/lib/postgresql
      - sonar-postgresql_data:/var/lib/postgresql/data
    networks:
      - net
      
  postgresql:
    container_name: postgres_keycloak
    image: docker.io/bitnami/postgresql:latest
    environment:
      ALLOW_EMPTY_PASSWORD: yes
      POSTGRESQL_USERNAME: bn_keycloak
      POSTGRESQL_DATABASE: bitnami_keycloak
    volumes:
      - keycloak-db-data:/bitnami/postgresql
  keycloak:
    container_name: keycloak
    image: docker.io/bitnami/keycloak:latest
    ports:
      - "80:8080"
    environment:
      KEYCLOAK_CREATE_ADMIN_USER: true
    depends_on:
      - postgresql
    volumes:
      - keycloak-data:/opt/bitnami/keycloak/themes/mynewtheme

volumes:
  sonar-data:
  sonar-extensions:
  sonar-logs:
  sonar-temp:
  sonar-postgresql:
  sonar-postgresql_data:
  mongo-data:
  keycloak-db-data:
  keycloak-data:
   
networks:
  net: